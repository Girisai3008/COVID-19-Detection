# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\QT\corona_disease_detection\predictor.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from images import covid
# from sklearn.ensemble import RandomForestClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
import numpy as np
import pandas as pd
import sys
import time
import csv
from sklearn.linear_model import LogisticRegression
from DBconn import DBConnection

class predict(object):
    def clear(self):
        self.lineEdit.clear()
        self.lineEdit_2.clear()
        self.output.clear()
    def alertmsg2(self, title, Message):
        self.warn = QtWidgets.QMessageBox()
        self.warn.setIcon(QtWidgets.QMessageBox.Information)
        self.warn.setWindowTitle(title)
        self.warn.setText(Message)
        self.warn.setStandardButtons(QtWidgets.QMessageBox.Ok)
        self.warn.setWindowIcon(QtGui.QIcon('D:\\111 _MACHINE_LEARNING\\033_Corona_Virus_Infection_detection_SVM\images\error.png'))
        self.warn.exec_()
    def predict(self):
        try:
            age = self.lineEdit.text()
            self.lineEdit.setMaxLength(2)
            self.lineEdit.setValidator(QtGui.QIntValidator())
            bt = self.lineEdit_2.text()
            self.lineEdit_2.setValidator(QtGui.QIntValidator())
            bd_pain = self.comboBox.currentText()
            r_nose = self.comboBox_2.currentText()
            prb_bth = self.comboBox_3.currentText()
            # print(age, bt, bd_pain, r_nose, prb_bth)
            if age == "" or age == "null" or bt == "" or bt == "null" or bd_pain == "" or bd_pain == "null" or r_nose == "" or r_nose == "null" or prb_bth == "" or prb_bth == "null":
                self.alertmsg2("failed", "Please Enter All the Fields")
            else:
                trainset = []
                mydb = DBConnection.getConnection()
                cursor = mydb.cursor()
                cursor.execute("select AGE,BODY_TEMP,BODY_PAIN,RUNNY_NOSE_STATUS,BREATHING_PROBLEM,TEST_RESULT from covid_health")
                row = cursor.fetchall()
                y_train = []
                trainset.clear()
                y_train.clear()
                for r in row:
                    x_train = []
                    x_train.clear()
                    x_train.append(float(r[0]))
                    x_train.append(float(r[1]))
                    x_train.append(float(r[2]))
                    x_train.append(float(r[3]))
                    x_train.append(float(r[4]))
                    y_train.append(r[5])
                    trainset.append(x_train)
                # print("y=", y_train)
                # print("trd=", trainset)
                trainset = np.array(trainset)
                # print("trd=", trainset)

                # Train the model
                y_train = np.array(y_train)
                if bd_pain == "Yes":
                    bd_pain = "1"
                else:
                    bd_pain = "2"
                if r_nose == "Yes":
                    r_nose = "1"
                else:
                    r_nose = "2"
                if prb_bth == "Yes":
                    prb_bth = "1"
                else:
                    prb_bth = "2"

                fields = ('AGE', 'BODY_TEMP', 'BODY_PAIN', 'RUNNY_NOSE_STATUS', 'BREATHING_PROBLEM')
                rows= [[age, bt, bd_pain, r_nose, prb_bth]]
                # print(rows)

                with open('D:\\111 _MACHINE_LEARNING\\033_Corona_Virus_Infection_detection_SVM\\dataset\\covid_test.csv', 'w',newline='') as f:
                    write = csv.writer(f)
                    write.writerow(fields)
                    write.writerows(rows)
                tf = pd.read_csv("D:\\111 _MACHINE_LEARNING\\033_Corona_Virus_Infection_detection_SVM\\dataset\\covid_test.csv")

                testdata = np.array(tf)
                testdata = testdata.reshape(len(testdata), -1)
                rf = LogisticRegression()
                rf.fit(trainset, y_train)
                result = rf.predict(testdata)
                # print(result)

                if (result[0] == '1'):
                    self.output.setText("POSITIVE")
                else:
                    self.output.setText("NEGATIVE")
                return result

        except Exception as e:
            print("Error=" + e.args[0])
            tb = sys.exc_info()[2]
            print(tb.tb_lineno)

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1225, 800)
        Dialog.setStyleSheet("QDialog{background-image: url(:/dialog/predictor.jpg);}")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(90, 90, 501, 561))
        self.label.setFrameShape(QtWidgets.QFrame.Panel)
        self.label.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label.setLineWidth(3)
        self.label.setText("")
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(330, 170, 171, 31))
        self.lineEdit.setStyleSheet("font: 14pt \"Franklin Gothic Demi\";\n"
"")
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setObjectName("lineEdit")
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(160, 220, 161, 81))
        self.label_3.setStyleSheet("font: 75 13pt \"Rockwell\";")
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(220, 310, 111, 71))
        self.label_4.setStyleSheet("font: 75 13pt \"Rockwell\";")
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.lineEdit_2 = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_2.setGeometry(QtCore.QRect(330, 250, 171, 31))
        self.lineEdit_2.setStyleSheet("font: 14pt \"Franklin Gothic Demi\";\n"
"")
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_6 = QtWidgets.QLabel(Dialog)
        self.label_6.setGeometry(QtCore.QRect(150, 420, 181, 111))
        self.label_6.setStyleSheet("font: 75 13pt \"Rockwell\";")
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(190, 170, 111, 41))
        self.label_2.setStyleSheet("font: 75 13pt \"Rockwell\";")
        self.label_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.label_5 = QtWidgets.QLabel(Dialog)
        self.label_5.setGeometry(QtCore.QRect(200, 370, 121, 81))
        self.label_5.setStyleSheet("font: 75 13pt \"Rockwell\";")
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.label_7 = QtWidgets.QLabel(Dialog)
        self.label_7.setGeometry(QtCore.QRect(92, 91, 201, 51))
        self.label_7.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(0, 49, 255, 209), stop:1 rgba(255, 255, 255, 255));\n"
"color: rgb(85, 0, 127);\n"
"font: 20pt \"Algerian\";")
        self.label_7.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_7.setLineWidth(3)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(Dialog)
        self.label_8.setGeometry(QtCore.QRect(340, 540, 132, 52))
        self.label_8.setFrameShape(QtWidgets.QFrame.Box)
        self.label_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_8.setLineWidth(1)
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(340, 540, 131, 51))
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setStyleSheet("font: 75 12pt \"Arial\";\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(0, 161, 130, 153), stop:1 rgba(255, 255, 255, 255));")
        self.pushButton.setIconSize(QtCore.QSize(16, 16))
        self.pushButton.setFlat(False)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(180, 540, 131, 51))
        self.pushButton_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_2.setStyleSheet("font: 75 12pt \"Arial\";\n"
                                      "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(0, 161, 130, 153), stop:1 rgba(255, 255, 255, 255));")
        self.pushButton_2.setIconSize(QtCore.QSize(16, 16))
        self.pushButton_2.setFlat(False)
        self.pushButton_2.setObjectName("pushButton_2")

        self.label_10 = QtWidgets.QLabel(Dialog)
        self.label_10.setGeometry(QtCore.QRect(90, 648, 501, 81))
        self.label_10.setStyleSheet("")
        self.label_10.setFrameShape(QtWidgets.QFrame.Panel)
        self.label_10.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_10.setLineWidth(3)
        self.label_10.setText("")
        self.label_10.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(Dialog)
        self.label_11.setGeometry(QtCore.QRect(94, 661, 321, 51))
        self.label_11.setStyleSheet("font: italic 18pt \"Calibri\";\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(255, 255, 49, 171), stop:1 rgba(255, 255, 255, 255));")
        self.label_11.setObjectName("label_11")
        self.output = QtWidgets.QLabel(Dialog)
        self.output.setGeometry(QtCore.QRect(380, 650, 241, 71))
        self.output.setStyleSheet("font: 20pt \"Algerian\";\n"
"color: rgb(170, 0, 0);")
        self.output.setText("")
        self.output.setAlignment(QtCore.Qt.AlignCenter)
        self.output.setObjectName("output")
        self.comboBox = QtWidgets.QComboBox(Dialog)
        self.comboBox.setGeometry(QtCore.QRect(330, 320, 171, 31))
        self.comboBox.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);\n"
"font: 14pt \"Franklin Gothic Demi\";")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox_2 = QtWidgets.QComboBox(Dialog)
        self.comboBox_2.setGeometry(QtCore.QRect(330, 400, 171, 31))
        self.comboBox_2.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);\n"
"font: 14pt \"Franklin Gothic Demi\";")
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_3 = QtWidgets.QComboBox(Dialog)
        self.comboBox_3.setGeometry(QtCore.QRect(330, 470, 171, 31))
        self.comboBox_3.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);\n"
"font: 14pt \"Franklin Gothic Demi\";")
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")

        self.retranslateUi(Dialog)
        self.comboBox.setCurrentIndex(-1)
        self.comboBox_2.setCurrentIndex(-1)
        self.comboBox_3.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        self.pushButton_2.clicked.connect(self.clear)
        self.pushButton.clicked.connect(self.predict)


    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label_3.setText(_translate("Dialog", "Body\n"
"Temperature"))
        self.label_4.setText(_translate("Dialog", "Body\n"
"Pain"))
        self.label_6.setText(_translate("Dialog", "Problem in\n"
"Breathing"))
        self.label_2.setText(_translate("Dialog", "Age"))
        self.label_5.setText(_translate("Dialog", "Runny\n"
"Nose?"))
        self.label_7.setText(_translate("Dialog", "COVID-19"))
        self.pushButton.setText(_translate("Dialog", "Get Result"))
        self.pushButton_2.setText(_translate("Dialog", "Clear Fields"))
        self.label_11.setText(_translate("Dialog", "Your Covid-19 Result is :"))
        self.comboBox.setItemText(0, _translate("Dialog", "Yes"))
        self.comboBox.setItemText(1, _translate("Dialog", "No"))
        self.comboBox_2.setItemText(0, _translate("Dialog", "Yes"))
        self.comboBox_2.setItemText(1, _translate("Dialog", "No"))
        self.comboBox_3.setItemText(0, _translate("Dialog", "Yes"))
        self.comboBox_3.setItemText(1, _translate("Dialog", "No"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = predict()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())